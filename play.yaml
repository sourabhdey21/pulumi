"""An OpenStack Python Pulumi program"""

import pulumi
import pulumi_openstack as openstack
from pulumi_openstack import compute


# Substitute these values with appropriate parameters.
# Resource properties can be found in the official 
# OpenStack Pulumi provider documentation
image_name = "CentOS-7"
flavor_name = "mb1.large"
network_id = "b7dc5b3f-4936-494d-a191-f8bb2c81952d"
keypair_name = "terraform"

# Create an instance
instance = compute.Instance("centos",
                            name="centos-pulumi",
                            image_name=image_name,
                            flavor_name=flavor_name,
                            networks=[{"uuid": network_id}],  # Assumes only one network
                            key_pair=keypair_name)


# Export the instance Id
pulumi.export("instance_id", instance.id)





# Create netowrk using pulumi #
# Create a new OpenStack network
network = openstack.networking.Network(
    "pulumi-network",
    name="pulumi-network",
    admin_state_up=True,
)

# Create a subnet within the network
subnet = openstack.networking.Subnet(
    "pulumi-subnet",
	name="pulumi-subnet",
    network_id=network.id,
    cidr="192.168.1.0/24",
    ip_version=4,
)



#Create vm using cloud init 

# Create a new OpenStack instance with cloud-init data
instance = openstack.compute.Instance(
    "my-instance",
    name="cloud-config",
    flavor_name="cb1.large",
    image_name="CentOS-7",
    networks=[{"uuid": network_id}],
    #networks=[{"network": openstack.networking.get_network("my-network").id}],
    user_data=f"""#!/bin/bash
                echo 'centos:123' | chpasswd
                """,
)

pulumi.export("instance_id", instance.id)
pulumi.export("instance_name", instance.name)



# Create a new OpenStack instance with custom credentials
instance = openstack.compute.Instance(
    "pulumi-window-instance",
    name="pulumi-windows",
    flavor_name="windows-flavor",
    image_name="windows_server_12_eval",  # Replace with the actual Windows image name
    networks=[{"uuid": network_id}],
    #networks=[{"network": openstack.networking.get_network("my-network").id}],
    user_data=r"""<powershell>
                # PowerShell script to change username and password
                $newUsername = 'pulumi'
                $newPassword = 'password'
                $adminUser = [ADSI]"WinNT://./Administrator, user"
                $adminUser.SetPassword($newPassword)
                $adminUser.SetInfo()
                $adminUser.Rename($newUsername)
                </powershell>""",
    #admin_password="Agneepath9911225167",  # Set the initial password for Administrator
)

# Export the instance's IP address
pulumi.export("instance_ip", instance.access_ip_v4)






#Create topology with network and subnet block start  #

# Create a new OpenStack network
network = openstack.networking.Network(
    "ex-gf",
    name="ex-gf",
    admin_state_up=True,
)

# Create a new OpenStack subnet within the network
subnet = openstack.networking.Subnet(
    "ex-gf-subnet",
    name="ex-gf-subnet",
    network_id=network.id,
    cidr="192.168.1.0/24",
    ip_version=4,
    gateway_ip="192.168.1.2",  # Set the gateway IP
)



# New  block start with network block and router block #

# Create a new OpenStack network
network = openstack.networking.Network(
    "my-network",
    admin_state_up=True,
)

# Create a new OpenStack subnet within the network
subnet = openstack.networking.Subnet(
    "my-subnet",
    network_id=network.id,
    cidr="192.168.2.0/24",
    gateway_ip="192.168.2.2",
    ip_version=4,
)



# Create a new OpenStack port with a specific IP address within the subnet
static_ip = "192.168.2.2"  # Replace with your desired static IP address
port = openstack.networking.Port(
    "my-port",
    network_id=network.id,
    fixed_ips=[{"subnet_id": subnet.id, "ip_address": static_ip}],
)






#security group block end #

# Create a new OpenStack instance (VyOS router) associated with the port
router_instance = openstack.compute.Instance(
    "vyos-router",
    name="vyos-router",
    flavor_name="gp2.medium",  # Replace with an appropriate flavor
    image_name="vyos-img", # Replace with the actual VyOS image name

    networks=[{"port": port.id}],
    user_data=r"""#cloud-config
                runcmd:
                  - ip addr add 192.168.2.2/24 dev eth0
                  - ip link set eth0 up
                """,
)
